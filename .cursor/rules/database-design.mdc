---
globs: app/server/**/*.py,docs/**/*.md
description: データベース設計とSQLAlchemy使用時のガイドライン
---

# データベース設計ルール

## 基本設計原則
- **正規化**を適切に行い、データの整合性を保つ
- **インデックス**を効果的に使用してパフォーマンスを向上
- **外部キー制約**を使用してデータ整合性を確保
- **命名規則**を統一（snake_case使用）

## SQLAlchemy モデル設計
- 各テーブルに`id`（Primary Key）、`created_at`、`updated_at`を含める
- リレーションシップを適切に定義
- バックリファレンスを使用して双方向アクセスを可能にする

## 主要エンティティ（[要件定義書](mdc:docs/v1.0.0/REQUIREMENTS_DEFINITION_DOCUMENT.md)参照）

### User（ユーザー）
```python
class User(Base):
    __tablename__ = "users"

    id = Column(Integer, primary_key=True, index=True)
    email = Column(String, unique=True, index=True, nullable=False)
    nickname = Column(String, nullable=False)
    created_at = Column(DateTime, default=datetime.utcnow)
    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
```

### Material（教材）
```python
class Material(Base):
    __tablename__ = "materials"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)
    title = Column(String, nullable=False)
    category = Column(String)
    total_pages = Column(Integer)
    difficulty_level = Column(Integer)  # 1-5
    created_at = Column(DateTime, default=datetime.utcnow)
```

### StudySession（学習セッション）
```python
class StudySession(Base):
    __tablename__ = "study_sessions"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)
    material_id = Column(Integer, ForeignKey("materials.id"))
    start_time = Column(DateTime, nullable=False)
    end_time = Column(DateTime)
    duration_minutes = Column(Integer)
    pages_studied = Column(Integer)
    created_at = Column(DateTime, default=datetime.utcnow)
```

### Goal（目標）
```python
class Goal(Base):
    __tablename__ = "goals"

    id = Column(Integer, primary_key=True, index=True)
    user_id = Column(Integer, ForeignKey("users.id"), nullable=False)
    title = Column(String, nullable=False)
    target_date = Column(Date)
    daily_target_minutes = Column(Integer)
    status = Column(Enum(GoalStatus))  # active, completed, paused
    created_at = Column(DateTime, default=datetime.utcnow)
```

## マイグレーション管理
- Alembicを使用してスキーマ変更を管理
- マイグレーションファイルには分かりやすい名前を付ける
- 本番環境への適用前に十分なテストを実施

## パフォーマンス考慮事項
- 頻繁にクエリされるカラムにインデックスを作成
- N+1問題を避けるためにeager loadingを使用
- 大量データの処理にはページネーションを実装
- クエリの実行計画を定期的に確認
